$ ./runbitmapbetter.sh 
# For each instance, we report the sparsity, the speed (union, intersection) for both the naive and bitmap approach(we also add two other bitmap approaches WAH and ConciseSet that you can ignore)
# proba. that any given integer in the range appears = 0.5
# generating random data...
# generating random data... ok.
# report speeds for union and intersection in millions of integers processed per second
#bogus = 94371500
#bogus = 141557180
#bogus = 141559040
#bogus = 141557180
#bogus = 94348670
0.5 	179.414	239.522 	306.402	462.607 	71.063	187.992 	122.88	186.506 	296.767	704.267
# proba. that any given integer in the range appears = 0.25
# generating random data...
# generating random data... ok.
# report speeds for union and intersection in millions of integers processed per second
#bogus = 188742930
#bogus = 283114160
#bogus = 283275980
#bogus = 283114160
#bogus = 184112890
0.25 	157.286	274.337 	312.49	1097.347 	71.711	238.313 	88.529	225.77 	248.347	827.823
# proba. that any given integer in the range appears = 0.125
# generating random data...
# generating random data... ok.
# report speeds for union and intersection in millions of integers processed per second
#bogus = 377483460
#bogus = 566223480
#bogus = 567479600
#bogus = 566223480
#bogus = 366132820
0.125 	187.246	310.434 	306.402	773.54 	57.755	248.347 	58.616	234.756 	175.412	725.937
# proba. that any given integer in the range appears = 0.0625
# generating random data...
# generating random data... ok.
# report speeds for union and intersection in millions of integers processed per second
#bogus = 754963920
#bogus = 1132441110
#bogus = 1148376350
#bogus = 1132441110
#bogus = 716891680
0.0625 	177.391	329.971 	185.771	445.15 	42.587	221.53 	38.363	186.506 	126.844	629.146
# proba. that any given integer in the range appears = 0.03125
# generating random data...
# generating random data... ok.
# report speeds for union and intersection in millions of integers processed per second
#bogus = 1509631990
#bogus = 2264290970
#bogus = 2359841650
#bogus = 2264290970
#bogus = 1458887940
0.03125 	178.735	339.467 	98.304	248.347 	29.584	161.044 	25.941	110.765 	93.623	449.39
# proba. that any given integer in the range appears = 0.015625
# generating random data...
# generating random data... ok.
# report speeds for union and intersection in millions of integers processed per second
#bogus = 3019836050
#bogus = 4529723900
#bogus = 4993058580
#bogus = 4529723900
#bogus = 2967118090
0.015625 	177.391	337.042 	53.56	143.422 	21.785	112.885 	20.036	71.386 	76.725	362.969
# proba. that any given integer in the range appears = 0.0078125
# generating random data...
# generating random data... ok.
# report speeds for union and intersection in millions of integers processed per second
#bogus = 6038722700
#bogus = 9057550210
#bogus = 10277710210
#bogus = 9057550210
#bogus = 5864965740
0.0078125 	176.067	371.543 	38.238	124.173 	18.614	113.156 	18.927	57.826 	73.043	417.575